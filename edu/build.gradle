def safeExtGet(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}

plugins {
    id 'com.android.library'
    id 'com.jakewharton.butterknife'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdkVersion safeExtGet('android', 'compileSdkVersion', 29)
    buildToolsVersion safeExtGet('android', 'buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('android', 'minSdkVersion', 19)
        targetSdkVersion safeExtGet('android', 'targetSdkVersion', 29)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'arm64-v8a' //, 'x86', 'armeabi-v7a', 'x86_64'
        }

        buildConfigField 'String', 'POLICY_URL', '"https://www.agora.io/privacy-policy"'
        buildConfigField 'String', 'REPLAY_BASE_URL', '"https://agora-adc-artifacts.oss-accelerate.aliyuncs.com"'
        //--------whiteboard-buildconfig-----------
        buildConfigField 'String', 'NETLESS_API_BASE_URL', '"https://cloudcapiv4.herewhite.com/"'
        //--------whiteboard-buildconfig-----------
        //--------api-buildconfig---------------
        buildConfigField 'String', 'SDK_VERSION', '"1.0.0"'
//        buildConfigField 'String', 'API_BASE_URL', '"http://api-test.agora.io"'
//        buildConfigField 'String', 'API_BASE_URL', '"http://api-solutions-dev.bj2.agoralab.co"'
        buildConfigField 'String', 'API_BASE_URL', '"https://api.agora.io"'
        buildConfigField 'String', 'LOG_OSS_CALLBACK_HOST', '"https://api-solutions.agoralab.co"'
        //--------api-buildconfig---------------
    }

    buildTypes {
        debug {
            minifyEnabled false
//            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions { jvmTarget = 1.8 }
//    fataar {
//        /**
//         * If transitive is true, local jar module and remote library's dependencies will be embed.
//         * If transitive is false, just embed first level dependency
//         * Local aar project does not support transitive, always embed first level
//         * Default value is false
//         * @since 1.3.0
//         */
//        transitive = true
//    }
}

dependencies {
//    api project(':base')
//    implementation project(':covideo')
//    implementation project(':log')
//    implementation project(':timeline')
//    implementation project(':whiteboard')
//    api project(':edusdk-api')
//    implementation project(':AgoraActionProcess')

    testImplementation "junit:junit:${safeExtGet('dependencies', 'junit:junit', '4.12')}"
    androidTestImplementation "androidx.test.ext:junit:${safeExtGet('dependencies', 'androidx.test.ext:junit', '1.1.1')}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${safeExtGet('dependencies', 'androidx.test.espresso:espresso-core', '3.2.0')}"

    implementation "com.google.android.material:material:${safeExtGet('dependencies', 'com.google.android.material:material', '1.2.1')}"
    implementation "com.google.android.exoplayer:exoplayer:${safeExtGet('dependencies', 'com.google.android.exoplayer:exoplayer', '2.8.1')}"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:${safeExtGet('dependencies', 'com.github.CymChad:BaseRecyclerViewAdapterHelper', '3.0.0-beta11')}"

    implementation "com.jakewharton:butterknife:${safeExtGet('dependencies', 'com.jakewharton:butterknife', '10.2.1')}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${safeExtGet('dependencies', 'com.jakewharton:butterknife-compiler', '10.2.1')}"

    implementation "com.github.bumptech.glide:glide:${safeExtGet('dependencies', 'com.github.bumptech.glide:glide', '4.11.0')}"
    annotationProcessor "com.github.bumptech.glide:compiler:${safeExtGet('dependencies', 'com.github.bumptech.glide:compiler', '4.11.0')}"

    //-----------base-------------
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'
    api "androidx.preference:preference:${safeExtGet('dependencies', 'androidx.preference:preference', '1.1.1')}"
    api "com.google.code.gson:gson:${safeExtGet('dependencies', 'com.google.code.gson:gson', '2.8.6')}"
    api "com.squareup.retrofit2:retrofit:${safeExtGet('dependencies', 'com.squareup.retrofit2:retrofit', '2.9.0')}"
    api "com.squareup.okhttp3:logging-interceptor:${safeExtGet('dependencies', 'com.squareup.okhttp3:logging-interceptor', '4.7.2')}"
    api "com.squareup.retrofit2:converter-gson:${safeExtGet('dependencies', 'com.squareup.retrofit2:converter-gson', '2.9.0')}"
    api "androidx.constraintlayout:constraintlayout:${safeExtGet('dependencies', 'androidx.constraintlayout:constraintlayout', '2.0.4')}"
    //-----------base-------------

    implementation "com.elvishew:xlog:${safeExtGet('dependencies', 'com.elvishew:xlog', '1.6.1')}"
    implementation "com.aliyun.dpa:oss-android-sdk:${safeExtGet('dependencies', 'com.aliyun.dpa:oss-android-sdk', '2.9.4')}"
    implementation "io.agora.rtc:full-sdk:${safeExtGet('dependencies', 'io.agora.rtc:full-sdk', '2.9.0.106')}"
    implementation "io.agora.rtm:rtm-sdk:${safeExtGet('dependencies', 'io.agora.rtm:rtm-sdk', '1.4.1')}"
    implementation "androidx.annotation:annotation:${safeExtGet('dependencies', 'androidx.annotation:annotation', '1.1.0')}"
    implementation "com.github.duty-os:white-sdk-android:${safeExtGet('dependencies', 'com.github.duty-os:white-sdk-android', '2.9.14')}"


//    //------打包aar配置开始-------
//    embed project(':AgoraActionProcess')
//    embed project(':base')
//    embed project(':covideo')
//    embed project(':edusdk-api')
//    embed project(':edusdk-impl')
//    embed project(':log')
//    embed project(':rte')
//    embed project(':timeline')
//    embed project(':whiteboard')
//
//    embed ("androidx.constraintlayout:constraintlayout:${safeExtGet('dependencies', 'androidx.constraintlayout:constraintlayout', '2.0.4')}") {
//        // exclude any group or module
//        exclude(group: 'androidx.core', module: 'core')
//        // exclude all dependencies
//        transitive = false
//    }
//    embed ("androidx.constraintlayout:constraintlayout-solver:${safeExtGet('dependencies', 'androidx.constraintlayout:constraintlayout-solver', '2.0.4')}")
//    //------打包aar配置结束-------

//    //--------maven打包aar开始----------------
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    api 'androidx.core:core-ktx:1.3.2'
//
//    api "androidx.preference:preference:${safeExtGet('dependencies', 'androidx.preference:preference', '1.1.1')}"
//
//    api "com.google.code.gson:gson:${safeExtGet('dependencies', 'com.google.code.gson:gson', '2.8.6')}"
//    api "com.squareup.retrofit2:retrofit:${safeExtGet('dependencies', 'com.squareup.retrofit2:retrofit', '2.9.0')}"
//    api "com.squareup.okhttp3:logging-interceptor:${safeExtGet('dependencies', 'com.squareup.okhttp3:logging-interceptor', '4.7.2')}"
//    api "com.squareup.retrofit2:converter-gson:${safeExtGet('dependencies', 'com.squareup.retrofit2:converter-gson', '2.9.0')}"
//
//    api "androidx.constraintlayout:constraintlayout:${safeExtGet('dependencies', 'androidx.constraintlayout:constraintlayout', '2.0.4')}"
//
//    api "com.elvishew:xlog:${safeExtGet('dependencies', 'com.elvishew:xlog', '1.6.1')}"
//    api "com.aliyun.dpa:oss-android-sdk:${safeExtGet('dependencies', 'com.aliyun.dpa:oss-android-sdk', '2.9.4')}"
//
//    api "io.agora.rtc:full-sdk:${safeExtGet('dependencies', 'io.agora.rtc:full-sdk', '2.9.0.106')}"
//    api "io.agora.rtm:rtm-sdk:${safeExtGet('dependencies', 'io.agora.rtm:rtm-sdk', '1.4.1')}"
//
//    api "androidx.annotation:annotation:${safeExtGet('dependencies', 'androidx.annotation:annotation', '1.1.0')}"
//
//    api "com.github.duty-os:white-sdk-android:${safeExtGet('dependencies', 'com.github.duty-os:white-sdk-android', '2.9.14')}"
//    //--------maven打包aar结束----------------
}

//apply plugin: 'maven'
//uploadArchives {
//    repositories.mavenDeployer {
//        // 本地存放目录(自行选择)，可放在gradle.properties文件中引用
//        def mavenDirPath = file('/Users/cjw/Desktop/EduSdkTest-maven')
//        // 必须双引号，单引号不会转义$
//        repository(url: "file://${mavenDirPath.absolutePath}")
//        pom.project {
//            groupId "io.agora.edu" // 可以随意取，一般取包名
//            artifactId "edusdk" // 可以随意取，一般取库的名字
//            version "1.0.0" // 版本号
//        }
//    }
//}